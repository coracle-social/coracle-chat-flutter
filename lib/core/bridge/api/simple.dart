// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Simple function that returns a greeting message
Future<String> getGreeting({required String name}) => RustLib.instance.api.crateApiSimpleGetGreeting(name: name);

/// Simple function that adds two numbers
Future<int> addNumbers({required int a, required int b}) => RustLib.instance.api.crateApiSimpleAddNumbers(a: a, b: b);

/// Simple function that multiplies two numbers
Future<int> multiplyNumbers({required int a, required int b}) =>
    RustLib.instance.api.crateApiSimpleMultiplyNumbers(a: a, b: b);

/// Simple function that returns a list of numbers
Future<Int32List> getNumberList({required int count}) => RustLib.instance.api.crateApiSimpleGetNumberList(count: count);

/// Simple function that calculates fibonacci number
Future<BigInt> fibonacci({required int n}) => RustLib.instance.api.crateApiSimpleFibonacci(n: n);

/// Simple function that reverses a string
Future<String> reverseString({required String input}) => RustLib.instance.api.crateApiSimpleReverseString(input: input);

/// Simple function that counts characters in a string
Future<int> countCharacters({required String input}) =>
    RustLib.instance.api.crateApiSimpleCountCharacters(input: input);

/// Simple function that checks if a number is prime
Future<bool> isPrime({required int n}) => RustLib.instance.api.crateApiSimpleIsPrime(n: n);
